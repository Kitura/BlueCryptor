// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		8C9590301CC80A2300A2C2B4 /* libCryptor.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = "_____Product_Cryptor" /* libCryptor.dylib */; };
		8C97EE131EBF75DD000E795B /* Cryptor-iOS.h in Headers */ = {isa = PBXBuildFile; fileRef = 8C97EE111EBF75DD000E795B /* Cryptor-iOS.h */; settings = {ATTRIBUTES = (Public, ); }; };
		8C97EE181EBF76F0000E795B /* Crypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Crypto.swift /* Crypto.swift */; };
		8C97EE191EBF76F0000E795B /* Cryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Cryptor.swift /* Cryptor.swift */; };
		8C97EE1A1EBF76F0000E795B /* Digest.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Digest.swift /* Digest.swift */; };
		8C97EE1B1EBF76F0000E795B /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/HMAC.swift /* HMAC.swift */; };
		8C97EE1C1EBF76F0000E795B /* KeyDerivation.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/KeyDerivation.swift /* KeyDerivation.swift */; };
		8C97EE1D1EBF76F0000E795B /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Random.swift /* Random.swift */; };
		8C97EE1E1EBF76F0000E795B /* Status.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Status.swift /* Status.swift */; };
		8C97EE1F1EBF76F0000E795B /* StreamCryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/StreamCryptor.swift /* StreamCryptor.swift */; };
		8C97EE201EBF76F0000E795B /* Updatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Updateable.swift /* Updatable.swift */; };
		8C97EE211EBF76F0000E795B /* Utilities.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Utilities.swift /* Utilities.swift */; };
		8CF04E2A1D4FCECC00C27814 /* CryptorTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8C9590241CC807D400A2C2B4 /* CryptorTests.swift */; };
		__src_cc_ref_Sources/Crypto.swift /* Crypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Crypto.swift /* Crypto.swift */; };
		__src_cc_ref_Sources/Cryptor.swift /* Cryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Cryptor.swift /* Cryptor.swift */; };
		__src_cc_ref_Sources/Digest.swift /* Digest.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Digest.swift /* Digest.swift */; };
		__src_cc_ref_Sources/HMAC.swift /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/HMAC.swift /* HMAC.swift */; };
		__src_cc_ref_Sources/KeyDerivation.swift /* KeyDerivation.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/KeyDerivation.swift /* KeyDerivation.swift */; };
		__src_cc_ref_Sources/Random.swift /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Random.swift /* Random.swift */; };
		__src_cc_ref_Sources/Status.swift /* Status.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Status.swift /* Status.swift */; };
		__src_cc_ref_Sources/StreamCryptor.swift /* StreamCryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/StreamCryptor.swift /* StreamCryptor.swift */; };
		__src_cc_ref_Sources/Updateable.swift /* Updatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Updateable.swift /* Updatable.swift */; };
		__src_cc_ref_Sources/Utilities.swift /* Utilities.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Utilities.swift /* Utilities.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		8C9590311CC80A2300A2C2B4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = __RootObject_ /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "______Target_Cryptor";
			remoteInfo = Cryptor;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		8C9590241CC807D400A2C2B4 /* CryptorTests.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = CryptorTests.swift; path = Tests/CryptorTests/CryptorTests.swift; sourceTree = "<group>"; };
		8C95902B1CC80A2300A2C2B4 /* CryptorTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = CryptorTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		8C97EE0F1EBF75DD000E795B /* Cryptor.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Cryptor.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		8C97EE111EBF75DD000E795B /* Cryptor-iOS.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Cryptor-iOS.h"; sourceTree = "<group>"; };
		8C97EE121EBF75DD000E795B /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		8C9B7E631FEC01D90038D9C6 /* BlueCryptor.podspec */ = {isa = PBXFileReference; lastKnownFileType = text; path = BlueCryptor.podspec; sourceTree = "<group>"; };
		8C9C42F01CD7881000045CFB /* LinuxMain.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = LinuxMain.swift; path = Tests/LinuxMain.swift; sourceTree = "<group>"; };
		8CD16C6C1CC81DE5007296B5 /* LICENSE */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
		8CD16C6D1CC81DE5007296B5 /* README.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		__PBXFileRef_Package.swift /* Package.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Crypto.swift /* Crypto.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = Crypto.swift; path = Sources/Cryptor/Crypto.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Cryptor.swift /* Cryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = Cryptor.swift; path = Sources/Cryptor/Cryptor.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Digest.swift /* Digest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = Digest.swift; path = Sources/Cryptor/Digest.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/HMAC.swift /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = HMAC.swift; path = Sources/Cryptor/HMAC.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/KeyDerivation.swift /* KeyDerivation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = KeyDerivation.swift; path = Sources/Cryptor/KeyDerivation.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Random.swift /* Random.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = Random.swift; path = Sources/Cryptor/Random.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Status.swift /* Status.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = Status.swift; path = Sources/Cryptor/Status.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/StreamCryptor.swift /* StreamCryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = StreamCryptor.swift; path = Sources/Cryptor/StreamCryptor.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Updateable.swift /* Updatable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = Updatable.swift; path = Sources/Cryptor/Updatable.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Utilities.swift /* Utilities.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = Utilities.swift; path = Sources/Cryptor/Utilities.swift; sourceTree = "<group>"; };
		"_____Product_Cryptor" /* libCryptor.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = libCryptor.dylib; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		8C9590281CC80A2300A2C2B4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8C9590301CC80A2300A2C2B4 /* libCryptor.dylib in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8C97EE0B1EBF75DD000E795B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		"___LinkPhase_Cryptor" /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		8C9590261CC807EA00A2C2B4 /* Tests */ = {
			isa = PBXGroup;
			children = (
				8C9C42F11CD7904000045CFB /* CryptorTests */,
				8C9C42F01CD7881000045CFB /* LinuxMain.swift */,
			);
			name = Tests;
			sourceTree = "<group>";
		};
		8C97EE101EBF75DD000E795B /* Cryptor-iOS */ = {
			isa = PBXGroup;
			children = (
				8C97EE111EBF75DD000E795B /* Cryptor-iOS.h */,
				8C97EE121EBF75DD000E795B /* Info.plist */,
			);
			path = "Cryptor-iOS";
			sourceTree = "<group>";
		};
		8C9C42F11CD7904000045CFB /* CryptorTests */ = {
			isa = PBXGroup;
			children = (
				8C9590241CC807D400A2C2B4 /* CryptorTests.swift */,
			);
			name = CryptorTests;
			sourceTree = "<group>";
		};
		Dependencies_ /* Dependencies */ = {
			isa = PBXGroup;
			children = (
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		"___RootGroup_" = {
			isa = PBXGroup;
			children = (
				8C9B7E631FEC01D90038D9C6 /* BlueCryptor.podspec */,
				8CD16C6C1CC81DE5007296B5 /* LICENSE */,
				__PBXFileRef_Package.swift /* Package.swift */,
				8CD16C6D1CC81DE5007296B5 /* README.md */,
				"_____Sources_" /* Sources */,
				8C9590261CC807EA00A2C2B4 /* Tests */,
				Dependencies_ /* Dependencies */,
				8C97EE101EBF75DD000E795B /* Cryptor-iOS */,
				"____Products_" /* Products */,
			);
			sourceTree = "<group>";
		};
		"____Products_" /* Products */ = {
			isa = PBXGroup;
			children = (
				"_____Product_Cryptor" /* libCryptor.dylib */,
				8C95902B1CC80A2300A2C2B4 /* CryptorTests.xctest */,
				8C97EE0F1EBF75DD000E795B /* Cryptor.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		"_____Sources_" /* Sources */ = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_Sources/Crypto.swift /* Crypto.swift */,
				__PBXFileRef_Sources/Cryptor.swift /* Cryptor.swift */,
				__PBXFileRef_Sources/Digest.swift /* Digest.swift */,
				__PBXFileRef_Sources/HMAC.swift /* HMAC.swift */,
				__PBXFileRef_Sources/KeyDerivation.swift /* KeyDerivation.swift */,
				__PBXFileRef_Sources/Random.swift /* Random.swift */,
				__PBXFileRef_Sources/Status.swift /* Status.swift */,
				__PBXFileRef_Sources/StreamCryptor.swift /* StreamCryptor.swift */,
				__PBXFileRef_Sources/Updateable.swift /* Updatable.swift */,
				__PBXFileRef_Sources/Utilities.swift /* Utilities.swift */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		8C97EE0C1EBF75DD000E795B /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8C97EE131EBF75DD000E795B /* Cryptor-iOS.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		8C95902A1CC80A2300A2C2B4 /* CryptorTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8C9590331CC80A2300A2C2B4 /* Build configuration list for PBXNativeTarget "CryptorTests" */;
			buildPhases = (
				8C9590271CC80A2300A2C2B4 /* Sources */,
				8C9590281CC80A2300A2C2B4 /* Frameworks */,
				8C9590291CC80A2300A2C2B4 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				8C9590321CC80A2300A2C2B4 /* PBXTargetDependency */,
			);
			name = CryptorTests;
			productName = CryptorTests;
			productReference = 8C95902B1CC80A2300A2C2B4 /* CryptorTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		8C97EE0E1EBF75DD000E795B /* Cryptor-iOS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8C97EE161EBF75DD000E795B /* Build configuration list for PBXNativeTarget "Cryptor-iOS" */;
			buildPhases = (
				8C97EE171EBF76BC000E795B /* ShellScript */,
				8C97EE0A1EBF75DD000E795B /* Sources */,
				8C97EE0B1EBF75DD000E795B /* Frameworks */,
				8C97EE0C1EBF75DD000E795B /* Headers */,
				8C97EE0D1EBF75DD000E795B /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "Cryptor-iOS";
			productName = "Cryptor-iOS";
			productReference = 8C97EE0F1EBF75DD000E795B /* Cryptor.framework */;
			productType = "com.apple.product-type.framework";
		};
		"______Target_Cryptor" /* Cryptor */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = "_______Confs_Cryptor" /* Build configuration list for PBXNativeTarget "Cryptor" */;
			buildPhases = (
				8C95901E1CC7D85000A2C2B4 /* ShellScript */,
				CompilePhase_Cryptor /* Sources */,
				"___LinkPhase_Cryptor" /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Cryptor;
			productName = Cryptor;
			productReference = "_____Product_Cryptor" /* libCryptor.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		__RootObject_ /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 0730;
				LastUpgradeCheck = 0900;
				TargetAttributes = {
					8C95902A1CC80A2300A2C2B4 = {
						CreatedOnToolsVersion = 7.3;
						LastSwiftMigration = 0900;
					};
					8C97EE0E1EBF75DD000E795B = {
						CreatedOnToolsVersion = 8.3.2;
						ProvisioningStyle = Automatic;
					};
					"______Target_Cryptor" = {
						LastSwiftMigration = 0900;
					};
				};
			};
			buildConfigurationList = "___RootConfs_" /* Build configuration list for PBXProject "Cryptor" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = "___RootGroup_";
			productRefGroup = "____Products_" /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"______Target_Cryptor" /* Cryptor */,
				8C95902A1CC80A2300A2C2B4 /* CryptorTests */,
				8C97EE0E1EBF75DD000E795B /* Cryptor-iOS */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		8C9590291CC80A2300A2C2B4 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8C97EE0D1EBF75DD000E795B /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		8C95901E1CC7D85000A2C2B4 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/bin/bash\nCC_PATH=\"$SRCROOT/CommonCrypto\"\necho \"$CC_PATH\"\n\nHEADER_FILE1=$SDKROOT/usr/include/CommonCrypto/CommonCrypto.h\nif [ ! -e $HEADER_FILE1 ] ; then\necho \"ERROR: The CommonCrypto.h header file could not be found.\"\nexit 1\nfi\n\nHEADER_FILE2=$SDKROOT/usr/include/CommonCrypto/CommonRandom.h\nif [ ! -e $HEADER_FILE2 ] ; then\necho \"ERROR: The CommonRandom.h header file could not be found.\"\nexit 1\nfi\n\nif [ -e \"$CC_PATH\" ] ; then\necho \"$CC_PATH exists...\"\nelse\nmkdir -p \"$CC_PATH\"\nfi\n\n# Write the module.map file\ncat <<_EOF_ > \"$CC_PATH/module.map\"\nmodule CommonCrypto [system] {\n    header \"$HEADER_FILE1\"\n    header \"$HEADER_FILE2\"\n    export *\n}\n\nmodule OpenSSL [system] {\n    header \"/usr/local/opt/openssl/include/openssl/conf.h\"\n    header \"/usr/local/opt/openssl/include/openssl/evp.h\"\n    header \"/usr/local/opt/openssl/include/openssl/err.h\"\n    header \"/usr/local/opt/openssl/include/openssl/bio.h\"\n    header \"/usr/local/opt/openssl/include/openssl/ssl.h\"\n    header \"/usr/local/opt/openssl/include/openssl/md4.h\"\n    header \"/usr/local/opt/openssl/include/openssl/md5.h\"\n    header \"/usr/local/opt/openssl/include/openssl/sha.h\"\n    header \"/usr/local/opt/openssl/include/openssl/hmac.h\"\n    header \"/usr/local/opt/openssl/include/openssl/rand.h\"\n    link \"ssl\"\n    link \"crypto\"\n}\n_EOF_\necho \"Created CommonCrypto Module Map.  CommonCrypto Framework now available.\"";
		};
		8C97EE171EBF76BC000E795B /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/bin/bash\nCC_PATH=\"$SRCROOT/CommonCrypto\"\necho \"$CC_PATH\"\n\nHEADER_FILE1=$SDKROOT/usr/include/CommonCrypto/CommonCrypto.h\nif [ ! -e $HEADER_FILE1 ] ; then\necho \"ERROR: The CommonCrypto.h header file could not be found.\"\nexit 1\nfi\n\nHEADER_FILE2=$SDKROOT/usr/include/CommonCrypto/CommonRandom.h\nif [ ! -e $HEADER_FILE2 ] ; then\necho \"ERROR: The CommonRandom.h header file could not be found.\"\nexit 1\nfi\n\nif [ -e \"$CC_PATH\" ] ; then\necho \"$CC_PATH exists...\"\nelse\nmkdir -p \"$CC_PATH\"\nfi\n\n# Write the module.map file\ncat <<_EOF_ > \"$CC_PATH/module.map\"\nmodule CommonCrypto [system] {\n    header \"$HEADER_FILE1\"\n    header \"$HEADER_FILE2\"\n    export *\n}\n_EOF_\necho \"Created CommonCrypto Module Map.  CommonCrypto Framework now available.\"";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		8C9590271CC80A2300A2C2B4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8CF04E2A1D4FCECC00C27814 /* CryptorTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8C97EE0A1EBF75DD000E795B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8C97EE181EBF76F0000E795B /* Crypto.swift in Sources */,
				8C97EE191EBF76F0000E795B /* Cryptor.swift in Sources */,
				8C97EE1A1EBF76F0000E795B /* Digest.swift in Sources */,
				8C97EE1B1EBF76F0000E795B /* HMAC.swift in Sources */,
				8C97EE1C1EBF76F0000E795B /* KeyDerivation.swift in Sources */,
				8C97EE1D1EBF76F0000E795B /* Random.swift in Sources */,
				8C97EE1E1EBF76F0000E795B /* Status.swift in Sources */,
				8C97EE1F1EBF76F0000E795B /* StreamCryptor.swift in Sources */,
				8C97EE201EBF76F0000E795B /* Updatable.swift in Sources */,
				8C97EE211EBF76F0000E795B /* Utilities.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CompilePhase_Cryptor /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				__src_cc_ref_Sources/Crypto.swift /* Crypto.swift in Sources */,
				__src_cc_ref_Sources/Cryptor.swift /* Cryptor.swift in Sources */,
				__src_cc_ref_Sources/Digest.swift /* Digest.swift in Sources */,
				__src_cc_ref_Sources/HMAC.swift /* HMAC.swift in Sources */,
				__src_cc_ref_Sources/KeyDerivation.swift /* KeyDerivation.swift in Sources */,
				__src_cc_ref_Sources/Random.swift /* Random.swift in Sources */,
				__src_cc_ref_Sources/Status.swift /* Status.swift in Sources */,
				__src_cc_ref_Sources/StreamCryptor.swift /* StreamCryptor.swift in Sources */,
				__src_cc_ref_Sources/Updateable.swift /* Updatable.swift in Sources */,
				__src_cc_ref_Sources/Utilities.swift /* Utilities.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		8C9590321CC80A2300A2C2B4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "______Target_Cryptor" /* Cryptor */;
			targetProxy = 8C9590311CC80A2300A2C2B4 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		8C9590341CC80A2300A2C2B4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
				INFOPLIST_FILE = Tests/CryptorTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/../Frameworks";
				LIBRARY_SEARCH_PATHS = /usr/local/opt/openssl/lib;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_CFLAGS = "-I/usr/local/opt/openssl/include";
				PRODUCT_BUNDLE_IDENTIFIER = com.ibm.oss.CryptorTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USER_HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
			};
			name = Debug;
		};
		8C9590351CC80A2300A2C2B4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "-";
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
				INFOPLIST_FILE = Tests/CryptorTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/../Frameworks";
				LIBRARY_SEARCH_PATHS = /usr/local/opt/openssl/lib;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_ENABLE_DEBUG_INFO = NO;
				OTHER_CFLAGS = "-I/usr/local/opt/openssl/include";
				PRODUCT_BUNDLE_IDENTIFIER = com.ibm.oss.CryptorTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USER_HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
			};
			name = Release;
		};
		8C97EE141EBF75DD000E795B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DEFINES_MODULE = YES;
				DEVELOPMENT_TEAM = "";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				INFOPLIST_FILE = "Cryptor-iOS/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MTL_ENABLE_DEBUG_INFO = YES;
				PRODUCT_BUNDLE_IDENTIFIER = com.ibm.oss.Cryptor;
				PRODUCT_NAME = Cryptor;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_INCLUDE_PATHS = "\"$SRCROOT/CommonCrypto\"";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 4.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		8C97EE151EBF75DD000E795B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DEFINES_MODULE = YES;
				DEVELOPMENT_TEAM = "";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				INFOPLIST_FILE = "Cryptor-iOS/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MTL_ENABLE_DEBUG_INFO = NO;
				PRODUCT_BUNDLE_IDENTIFIER = com.ibm.oss.Cryptor;
				PRODUCT_NAME = Cryptor;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_INCLUDE_PATHS = "\"$SRCROOT/CommonCrypto\"";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 4.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		_ReleaseConf_Cryptor /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DYLIB_INSTALL_NAME_BASE = "$(CONFIGURATION_BUILD_DIR)";
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = /usr/local/opt/openssl/include;
				HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				LIBRARY_SEARCH_PATHS = /usr/local/opt/openssl/lib;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "-I/usr/local/opt/openssl/include";
				OTHER_LDFLAGS = "";
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_MODULE_NAME = Cryptor;
				PRODUCT_NAME = "lib$(TARGET_NAME)";
				SWIFT_INCLUDE_PATHS = "\"$SRCROOT/CommonCrypto\"";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USER_HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
			};
			name = Release;
		};
		"___DebugConf_Cryptor" /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DYLIB_INSTALL_NAME_BASE = "$(CONFIGURATION_BUILD_DIR)";
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = /usr/local/opt/openssl/include;
				HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				LIBRARY_SEARCH_PATHS = /usr/local/opt/openssl/lib;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "-I/usr/local/opt/openssl/include";
				OTHER_LDFLAGS = "";
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_MODULE_NAME = Cryptor;
				PRODUCT_NAME = "lib$(TARGET_NAME)";
				SWIFT_INCLUDE_PATHS = "\"$SRCROOT/CommonCrypto\"";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USER_HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
			};
			name = Debug;
		};
		"_____Release_" /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		"_______Debug_" /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				ONLY_ACTIVE_ARCH = YES;
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		8C9590331CC80A2300A2C2B4 /* Build configuration list for PBXNativeTarget "CryptorTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8C9590341CC80A2300A2C2B4 /* Debug */,
				8C9590351CC80A2300A2C2B4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8C97EE161EBF75DD000E795B /* Build configuration list for PBXNativeTarget "Cryptor-iOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8C97EE141EBF75DD000E795B /* Debug */,
				8C97EE151EBF75DD000E795B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		"___RootConfs_" /* Build configuration list for PBXProject "Cryptor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				"_______Debug_" /* Debug */,
				"_____Release_" /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		"_______Confs_Cryptor" /* Build configuration list for PBXNativeTarget "Cryptor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				"___DebugConf_Cryptor" /* Debug */,
				_ReleaseConf_Cryptor /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = __RootObject_ /* Project object */;
}
